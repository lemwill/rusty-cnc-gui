name: Rust

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable, beta, nightly]
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Install cross
        run: cargo install cross
      - name: Build release Linux
        run: cross build --target x86_64-unknown-linux-gnu --release
      - name: Build release MacOS
        run: cross build --target x86_64-apple-darwin --release
      - name: Build release Windows
        run: cross build --target x86_64-pc-windows-msvc --release
      - name: Upload release
        uses: actions/upload-artifact@v2
        with:
          name: myapp
          path: |
            target/x86_64-unknown-linux-gnu/release/myapp
            target/x86_64-apple-darwin/release/myapp
            target/x86_64-pc-windows-msvc/release/myapp.exe
